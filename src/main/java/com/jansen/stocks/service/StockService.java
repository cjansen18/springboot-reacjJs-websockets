package com.jansen.stocks.service;import com.jansen.stocks.dao.StockDAO;import com.jansen.stocks.entity.Stock;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import java.math.BigDecimal;import java.util.ArrayList;import java.util.List;import static java.util.stream.Collectors.toList;/** * Created by jansen on 11/20/16. */@Servicepublic class StockService {    private StockDAO stockDAO;    @Autowired    public StockService(StockDAO stockDAO) {        this.stockDAO = stockDAO;    }    public Stock getPrice(String ticker) {        return stockDAO.getPrice(ticker);    }    public List<Stock> getPrices(List<String> tickers) {        return tickers.parallelStream().map(ticker -> stockDAO.getPrice(ticker)).collect(toList());    }    public List<Stock> getTestPrices(List<String> tickers) {        int count=0;        List<Stock> localStocks=new ArrayList<Stock>();        for (String ticker:tickers){            Stock stock=new Stock();            count++;            stock.setId(count);            stock.setTicker(ticker);            stock.setExchange("JANSENLOCAL");            stock.setPrice(generateRandomPrice());            localStocks.add(stock);        }        return localStocks;    }    private BigDecimal generateRandomPrice(){        BigDecimal max = new BigDecimal("1.44");        BigDecimal min = new BigDecimal("0.44");        BigDecimal range = max.subtract(min);        BigDecimal result = min.add(range.multiply(new BigDecimal(Math.random())).setScale(2, BigDecimal.ROUND_UP));        result.setScale(2, BigDecimal.ROUND_UP);        System.out.println(result);        return result;    }}